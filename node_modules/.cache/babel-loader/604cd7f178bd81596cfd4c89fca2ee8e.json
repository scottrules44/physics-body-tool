{"ast":null,"code":"/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = [];\n  let index = -1;\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]];\n\n    if (!def) {\n      continue;\n    }\n\n    const content = state.all(def);\n    const id = String(def.identifier).toUpperCase();\n    const safeId = normalizeUri(id.toLowerCase());\n    let referenceIndex = 0;\n    /** @type {Array<ElementContent>} */\n\n    const backReferences = [];\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href: '#' + state.clobberPrefix + 'fnref-' + safeId + (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{\n          type: 'text',\n          value: '↩'\n        }]\n      };\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{\n            type: 'text',\n            value: String(referenceIndex)\n          }]\n        });\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({\n          type: 'text',\n          value: ' '\n        });\n      }\n\n      backReferences.push(backReference);\n    }\n\n    const tail = content[content.length - 1];\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1];\n\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' ';\n      } else {\n        tail.children.push({\n          type: 'text',\n          value: ' '\n        });\n      }\n\n      tail.children.push(...backReferences);\n    } else {\n      content.push(...backReferences);\n    }\n    /** @type {Element} */\n\n\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {\n        id: state.clobberPrefix + 'fn-' + safeId\n      },\n      children: state.wrap(content, true)\n    };\n    state.patch(def, listItem);\n    listItems.push(listItem);\n  }\n\n  if (listItems.length === 0) {\n    return;\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {\n      dataFootnotes: true,\n      className: ['footnotes']\n    },\n    children: [{\n      type: 'element',\n      tagName: state.footnoteLabelTagName,\n      properties: { // To do: use structured clone.\n        ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n        id: 'footnote-label'\n      },\n      children: [{\n        type: 'text',\n        value: state.footnoteLabel\n      }]\n    }, {\n      type: 'text',\n      value: '\\n'\n    }, {\n      type: 'element',\n      tagName: 'ol',\n      properties: {},\n      children: state.wrap(listItems, true)\n    }, {\n      type: 'text',\n      value: '\\n'\n    }]\n  };\n}","map":{"version":3,"names":["normalizeUri","footer","state","listItems","index","footnoteOrder","length","def","footnoteById","content","all","id","String","identifier","toUpperCase","safeId","toLowerCase","referenceIndex","backReferences","footnoteCounts","backReference","type","tagName","properties","href","clobberPrefix","dataFootnoteBackref","className","ariaLabel","footnoteBackLabel","children","value","push","tail","tailTail","listItem","wrap","patch","dataFootnotes","footnoteLabelTagName","JSON","parse","stringify","footnoteLabelProperties","footnoteLabel"],"sources":["/Users/scottharrison/ownCloud/Desktop/cached projects/web-physic-body-editor/physics-body-tool/node_modules/mdast-util-to-hast/lib/footer.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}