{"ast":null,"code":"/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\n\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {\n    href: normalizeUri(node.url)\n  };\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title;\n  }\n  /** @type {Element} */\n\n\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","map":{"version":3,"names":["normalizeUri","link","state","node","properties","href","url","title","undefined","result","type","tagName","children","all","patch","applyData"],"sources":["/Users/scottharrison/ownCloud/Desktop/cached projects/web-physic-body-editor/physics-body-tool/node_modules/mdast-util-to-hast/lib/handlers/link.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,YAAR,QAA2B,6BAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2B;EAChC;EACA,MAAMC,UAAU,GAAG;IAACC,IAAI,EAAEL,YAAY,CAACG,IAAI,CAACG,GAAN;EAAnB,CAAnB;;EAEA,IAAIH,IAAI,CAACI,KAAL,KAAe,IAAf,IAAuBJ,IAAI,CAACI,KAAL,KAAeC,SAA1C,EAAqD;IACnDJ,UAAU,CAACG,KAAX,GAAmBJ,IAAI,CAACI,KAAxB;EACD;EAED;;;EACA,MAAME,MAAM,GAAG;IACbC,IAAI,EAAE,SADO;IAEbC,OAAO,EAAE,GAFI;IAGbP,UAHa;IAIbQ,QAAQ,EAAEV,KAAK,CAACW,GAAN,CAAUV,IAAV;EAJG,CAAf;EAMAD,KAAK,CAACY,KAAN,CAAYX,IAAZ,EAAkBM,MAAlB;EACA,OAAOP,KAAK,CAACa,SAAN,CAAgBZ,IAAhB,EAAsBM,MAAtB,CAAP;AACD"},"metadata":{},"sourceType":"module"}