{"ast":null,"code":"/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\n\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {\n    src: normalizeUri(node.url)\n  };\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt;\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title;\n  }\n  /** @type {Element} */\n\n\n  const result = {\n    type: 'element',\n    tagName: 'img',\n    properties,\n    children: []\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","map":{"version":3,"names":["normalizeUri","image","state","node","properties","src","url","alt","undefined","title","result","type","tagName","children","patch","applyData"],"sources":["/Users/scottharrison/ownCloud/Desktop/cached projects/web-physic-body-editor/physics-body-tool/node_modules/mdast-util-to-hast/lib/handlers/image.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,YAAR,QAA2B,6BAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4B;EACjC;EACA,MAAMC,UAAU,GAAG;IAACC,GAAG,EAAEL,YAAY,CAACG,IAAI,CAACG,GAAN;EAAlB,CAAnB;;EAEA,IAAIH,IAAI,CAACI,GAAL,KAAa,IAAb,IAAqBJ,IAAI,CAACI,GAAL,KAAaC,SAAtC,EAAiD;IAC/CJ,UAAU,CAACG,GAAX,GAAiBJ,IAAI,CAACI,GAAtB;EACD;;EAED,IAAIJ,IAAI,CAACM,KAAL,KAAe,IAAf,IAAuBN,IAAI,CAACM,KAAL,KAAeD,SAA1C,EAAqD;IACnDJ,UAAU,CAACK,KAAX,GAAmBN,IAAI,CAACM,KAAxB;EACD;EAED;;;EACA,MAAMC,MAAM,GAAG;IAACC,IAAI,EAAE,SAAP;IAAkBC,OAAO,EAAE,KAA3B;IAAkCR,UAAlC;IAA8CS,QAAQ,EAAE;EAAxD,CAAf;EACAX,KAAK,CAACY,KAAN,CAAYX,IAAZ,EAAkBO,MAAlB;EACA,OAAOR,KAAK,CAACa,SAAN,CAAgBZ,IAAhB,EAAsBO,MAAtB,CAAP;AACD"},"metadata":{},"sourceType":"module"}