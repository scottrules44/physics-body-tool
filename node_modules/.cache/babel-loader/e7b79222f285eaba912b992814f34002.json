{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport random from \"../modules/random\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dots(_ref) {\n  _s();\n\n  let {\n    data,\n    updateData,\n    mode,\n    reload\n  } = _ref;\n  const dotDrag = useRef();\n  const [renderedDot, setRenderedDot] = useState([]);\n  const [isDragging, setDragging] = useState(null);\n\n  function drawLines(xA, yA, xB, yB, context) {\n    context.beginPath();\n    context.moveTo(xA, yA);\n    context.lineTo(xB, yB);\n    context.stroke();\n  }\n\n  function reloadCanvas() {\n    reload();\n    setRenderedDot([]);\n    loadDots(true);\n  }\n\n  function loadDots(includeAll) {\n    data.forEach((dot, index, array) => {\n      if ((!renderedDot.includes(dot) || includeAll == true) && canvas) {\n        var context = canvas.getContext('2d');\n        context.beginPath();\n        context.ellipse(dot.x, dot.y, dot.width, dot.height, 0, 0, 2 * Math.PI);\n        context.stroke();\n\n        if (array[index - 1]) {\n          drawLines(dot.x, dot.y, array[index - 1].x, array[index - 1].y, context);\n        }\n\n        if (array.length >= 3 && array.length - 1 == index) {\n          drawLines(dot.x, dot.y, array[0].x, array[0].y, context);\n        }\n\n        setRenderedDot([...renderedDot, dot]);\n      }\n    });\n  }\n\n  var canvas = document.getElementById(\"editor_image\");\n\n  function dotsClick(ev) {\n    const rect = canvas.getBoundingClientRect();\n    var x = ev.clientX - rect.left;\n    var y = ev.clientY - rect.top;\n    var dotSelected = null;\n    data.forEach((dot, index) => {\n      var dotW = dot.width;\n      var dotH = dot.height;\n      var dotL = dot.x - dotW;\n      var dotT = dot.y - dotH;\n\n      if (y > dotT && y < dotT + dotH * 2 && x > dotL && x < dotL + dotW * 2) {\n        dotSelected = index;\n      }\n    });\n\n    if (mode === \"remove\" && dotSelected != null) {\n      var tempData = data;\n      tempData.splice(dotSelected, 1);\n      updateData([...tempData]);\n      reloadCanvas();\n    }\n  }\n\n  if (canvas) {\n    canvas.onclick = ev => {\n      dotsClick(ev);\n    }; //drag\n\n\n    canvas.onmousedown = ev => {\n      if (isDragging == null && mode === \"move\") {\n        const rect = canvas.getBoundingClientRect();\n        var x = ev.clientX - rect.left;\n        var y = ev.clientY - rect.top;\n        data.forEach((dot, index) => {\n          var dotW = dot.width;\n          var dotH = dot.height;\n          var dotL = dot.x - dotW;\n          var dotT = dot.y - dotH;\n\n          if (y > dotT && y < dotT + dotH * 2 && x > dotL && x < dotL + dotW * 2) {\n            setDragging(index);\n          }\n        });\n      }\n    };\n\n    canvas.onmouseup = ev => {\n      if (isDragging != null) {\n        setDragging(null);\n      }\n    };\n\n    canvas.onmousemove = ev => {\n      if (isDragging != null && mode == \"move\") {\n        var tempData = data;\n        const rect = canvas.getBoundingClientRect();\n        const elementRelativeX = ev.clientX - rect.left;\n        const elementRelativeY = ev.clientY - rect.top;\n        const canvasRelativeX = elementRelativeX * canvas.width / rect.width;\n        const canvasRelativeY = elementRelativeY * canvas.height / rect.height;\n        tempData[isDragging] = {\n          x: canvasRelativeX,\n          y: canvasRelativeY,\n          key: random(5),\n          width: 10,\n          height: 10\n        };\n        updateData([...tempData]);\n        reloadCanvas();\n      }\n    };\n\n    canvas.onmouseout = ev => {\n      if (isDragging != null) {\n        setDragging(null);\n      }\n    };\n  }\n\n  loadDots(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Dots, \"xrXLQk1r6Goc056flpfIJYlOwVE=\");\n\n_c = Dots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dots\");","map":{"version":3,"names":["React","useState","useRef","random","Dots","data","updateData","mode","reload","dotDrag","renderedDot","setRenderedDot","isDragging","setDragging","drawLines","xA","yA","xB","yB","context","beginPath","moveTo","lineTo","stroke","reloadCanvas","loadDots","includeAll","forEach","dot","index","array","includes","canvas","getContext","ellipse","x","y","width","height","Math","PI","length","document","getElementById","dotsClick","ev","rect","getBoundingClientRect","clientX","left","clientY","top","dotSelected","dotW","dotH","dotL","dotT","tempData","splice","onclick","onmousedown","onmouseup","onmousemove","elementRelativeX","elementRelativeY","canvasRelativeX","canvasRelativeY","key","onmouseout"],"sources":["/Users/scottharrison/ownCloud/Desktop/cached projects/web-physic-body-editor/physics-body-tool/src/components/Dots.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\nimport random from \"../modules/random\";\nexport default function Dots({data, updateData, mode, reload}){\n    const dotDrag = useRef();\n    const [renderedDot, setRenderedDot] = useState([]);\n    const [isDragging, setDragging] = useState(null);\n    \n    \n    function drawLines(xA,yA,xB,yB, context)\n    {\n        context.beginPath();\n        context.moveTo(xA, yA);\n        context.lineTo(xB, yB);\n        context.stroke();\n        \n    }\n    function reloadCanvas(){\n        reload();\n        setRenderedDot([]);\n        loadDots(true);\n        \n    }\n    function loadDots(includeAll){\n        \n        data.forEach((dot, index, array) => {\n            \n            if((!renderedDot.includes(dot) || includeAll == true) && canvas){\n                \n                var context = canvas.getContext('2d');\n                context.beginPath();\n                context.ellipse(dot.x, dot.y, dot.width, dot.height, 0, 0, 2 * Math.PI)\n                context.stroke();\n                if(array[index-1]){\n                    drawLines(dot.x, dot.y, array[index-1].x, array[index-1].y, context);\n                }\n                if(array.length >= 3 && array.length-1 == index){\n                    drawLines(dot.x, dot.y, array[0].x, array[0].y, context);\n                }\n    \n                setRenderedDot([...renderedDot, dot]);\n            } \n            \n        });\n    }\n    \n    var canvas = document.getElementById(\"editor_image\");\n    function dotsClick(ev){\n        const rect = canvas.getBoundingClientRect();\n        var x = ev.clientX - rect.left;\n        var y = ev.clientY - rect.top;\n        \n        var dotSelected = null;\n        data.forEach((dot, index) => {\n            var dotW = dot.width;\n            var dotH = dot.height;\n            var dotL = dot.x-dotW;\n            var dotT = dot.y-dotH;\n            \n            if (y > dotT && y < (dotT + (dotH *2)) \n                && x > dotL && x < (dotL + (dotW*2)) ) {\n                dotSelected = index;\n            }\n        })\n        if(mode === \"remove\" && dotSelected != null){\n            var tempData = data;\n            tempData.splice(dotSelected, 1);\n            updateData([...tempData]);\n            reloadCanvas();\n        }\n        \n    }\n   \n    if(canvas){\n        canvas.onclick = (ev)=> {dotsClick(ev)};\n        //drag\n        canvas.onmousedown =  (ev)=> {\n            if(isDragging == null && mode === \"move\"){\n                const rect = canvas.getBoundingClientRect();\n                var x = ev.clientX - rect.left;\n                var y = ev.clientY - rect.top;\n                data.forEach((dot, index) => {\n                    var dotW = dot.width;\n                    var dotH = dot.height;\n                    var dotL = dot.x-dotW;\n                    var dotT = dot.y-dotH;\n                    if (y > dotT && y < (dotT + (dotH *2)) \n                        && x > dotL && x < (dotL + (dotW*2)) ) {\n                        setDragging(index);\n                    }\n                })\n            }\n            \n        };\n        canvas.onmouseup =  (ev)=> {\n            if(isDragging != null ){\n                setDragging(null);\n            }\n        };\n        canvas.onmousemove =  (ev)=> {\n            if(isDragging != null && mode == \"move\"){\n                var tempData = data;\n                const rect = canvas.getBoundingClientRect();\n                const elementRelativeX = ev.clientX - rect.left;\n                const elementRelativeY = ev.clientY - rect.top;\n                const canvasRelativeX = elementRelativeX * canvas.width / rect.width;\n                const canvasRelativeY = elementRelativeY * canvas.height / rect.height;\n                tempData[isDragging]= {x: canvasRelativeX, y:canvasRelativeY, key:random(5), width:10, height:10};\n                updateData([...tempData]);\n                reloadCanvas();\n            }\n        };\n        canvas.onmouseout =  (ev)=> {\n            if(isDragging != null ){\n                setDragging(null);\n            }\n        };\n        \n    }\n    loadDots(false);\n    \n    return(\n        <></>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}