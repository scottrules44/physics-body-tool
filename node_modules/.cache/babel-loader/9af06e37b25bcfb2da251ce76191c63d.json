{"ast":null,"code":"import React, { useState, useRef } from \"react\";\nimport Matter, { World } from \"matter-js\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BodyTest(_ref) {\n  let {\n    mode,\n    image,\n    dots,\n    wireframe,\n    baseImage\n  } = _ref;\n  var wHPadding = 100;\n  var Engine = Matter.Engine,\n      Render = Matter.Render,\n      Runner = Matter.Runner,\n      Bodies = Matter.Bodies,\n      Composite = Matter.Composite; // create an engine\n\n  var engine = Engine.create();\n  var canvas = document.getElementById('canvas_test');\n  var editorImg = document.getElementById('editor_image');\n\n  function getDotWH() {\n    var xs = [];\n    var ys = [];\n    dots.forEach(e => {\n      xs.push(e.x);\n      ys.push(e.y);\n    });\n    var minX = Math.min(...xs);\n    var maxX = Math.max(...xs);\n    var minY = Math.min(...ys);\n    var maxY = Math.max(...ys);\n\n    if (minX < 0) {\n      minX = 0;\n    }\n\n    if (minY < 0) {\n      minY = 0;\n    }\n\n    if (maxX > editorImg.width) {\n      maxX = editorImg.width;\n    }\n\n    if (maxY > editorImg.height) {\n      maxY = editorImg.height;\n    }\n\n    return [maxX + 5, minX, maxY + 5, minY];\n  }\n\n  if (mode == \"test\" && canvas && editorImg && image) {\n    var render = Render.create({\n      element: window.document.getElementById(\"editor\"),\n      engine: engine,\n      canvas: canvas,\n      options: {\n        width: editorImg.width + wHPadding,\n        height: editorImg.height + wHPadding,\n        wireframes: wireframe\n      }\n    }); // create two boxes and a ground\n\n    if (dots && dots.length > 2) {\n      var wH = getDotWH();\n      var scale = Math.min(editorImg.width / baseImage.width, editorImg.height / baseImage.height);\n      var x = wH[1] + 50;\n      var y = wH[3] + 50;\n      var boxA = Bodies.fromVertices(x, y, dots, {\n        isStatic: true\n      });\n      boxA.position.x = boxA.bounds.min.x;\n      boxA.position.y = boxA.bounds.min.y;\n      boxA.positionPrev.x = boxA.bounds.min.x;\n      boxA.positionPrev.y = boxA.bounds.min.y;\n      Matter.Body.set(boxA, \"position\", {\n        x: x,\n        y: y\n      });\n      var x2 = (wH[0] - wH[1]) * .5 + wH[1] + 50;\n      var y2 = (wH[2] - wH[3]) * .5 + wH[3] + 50;\n      boxA.position.x = x2;\n      boxA.position.y = y2;\n      boxA.positionPrev.x = x2;\n      boxA.positionPrev.y = y2;\n      var boxB = Bodies.rectangle(250, 250, 400, 400, {\n        isStatic: true,\n        isSensor: true,\n        render: {\n          sprite: {\n            texture: URL.createObjectURL(image),\n            xScale: scale,\n            yScale: scale\n          }\n        }\n      });\n      Composite.add(engine.world, [boxA, boxB]);\n    } else {\n      alert(\"You need place at least three dots to test\");\n    }\n\n    var mouse = Matter.Mouse.create(render.canvas);\n    let mouseConstraint = Matter.MouseConstraint.create(engine, {\n      mouse: mouse,\n      constraint: {\n        render: {\n          visible: false\n        }\n      }\n    });\n    Matter.Events.on(mouseConstraint, 'mousedown', function (event) {\n      const x = event.mouse.position.x;\n      const y = event.mouse.position.y;\n      var ball = Bodies.circle(x, y, 5);\n      World.add(engine.world, ball);\n    });\n    Composite.add(engine.world, [mouseConstraint]);\n    Render.run(render);\n    var runner = Runner.create(); // run the engine\n\n    Runner.run(runner, engine);\n    canvas.style.marginLeft = \"auto\";\n    canvas.style.marginRight = \"auto\";\n    canvas.style.display = \"block\";\n    editorImg.style.display = \"none\";\n  } else if (canvas && editorImg) {\n    canvas.style.display = \"none\";\n    editorImg.style.display = \"block\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = BodyTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyTest\");","map":{"version":3,"names":["React","useState","useRef","Matter","World","BodyTest","mode","image","dots","wireframe","baseImage","wHPadding","Engine","Render","Runner","Bodies","Composite","engine","create","canvas","document","getElementById","editorImg","getDotWH","xs","ys","forEach","e","push","x","y","minX","Math","min","maxX","max","minY","maxY","width","height","render","element","window","options","wireframes","length","wH","scale","boxA","fromVertices","isStatic","position","bounds","positionPrev","Body","set","x2","y2","boxB","rectangle","isSensor","sprite","texture","URL","createObjectURL","xScale","yScale","add","world","alert","mouse","Mouse","mouseConstraint","MouseConstraint","constraint","visible","Events","on","event","ball","circle","run","runner","style","marginLeft","marginRight","display"],"sources":["/Users/scottharrison/ownCloud/Desktop/cached projects/web-physic-body-editor/physics-body-tool/src/components/BodyTest.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\nimport Matter, { World } from \"matter-js\";\n\nexport default function BodyTest({mode, image, dots, wireframe, baseImage}){\n    \n    var wHPadding = 100;\n    var Engine = Matter.Engine,\n    Render = Matter.Render,\n    Runner = Matter.Runner,\n    Bodies = Matter.Bodies,\n    Composite = Matter.Composite;\n\n\n    // create an engine\n    var engine = Engine.create();\n    \n    \n\n    var canvas = document.getElementById('canvas_test');\n    var editorImg = document.getElementById('editor_image');\n    function getDotWH(){\n        var xs = [];\n        var ys = [];\n        dots.forEach( e => {\n            xs.push(e.x);\n            ys.push(e.y);\n        });\n        var minX = (Math.min(...xs));\n        var maxX = (Math.max(...xs));\n        var minY = (Math.min(...ys));\n        var maxY = (Math.max(...ys));\n        if(minX < 0){\n            minX =0;\n        }\n        if(minY < 0){\n            minY =0;\n        }\n        \n        if(maxX > editorImg.width){\n            maxX =editorImg.width;\n        }\n        if(maxY > editorImg.height){\n            maxY =editorImg.height;\n        }\n        return [maxX+5, minX, maxY+5, minY]\n    }\n    \n    if(mode == \"test\" && canvas && editorImg && image){  \n\n        var render = Render.create({\n            element: window.document.getElementById(\"editor\"),\n            engine: engine,\n            canvas: canvas,\n            options: {\n                width: editorImg.width+wHPadding,\n                height: editorImg.height+wHPadding,\n                wireframes: wireframe,\n              }\n        });\n        \n       \n        \n        // create two boxes and a ground\n        if(dots && dots.length > 2){\n            var wH = getDotWH();\n            var scale = Math.min((editorImg.width) / baseImage.width, (editorImg.height) / baseImage.height);\n            var x = wH[1]+50\n            var y = wH[3]+50\n            var boxA = Bodies.fromVertices( x, y, dots, { \n                    isStatic: true,\n                });\n            \n            boxA.position.x = boxA.bounds.min.x;\n            boxA.position.y = boxA.bounds.min.y;\n            boxA.positionPrev.x = boxA.bounds.min.x;\n            boxA.positionPrev.y = boxA.bounds.min.y;\n            \n            Matter.Body.set(boxA, \"position\", {x: x, y: y})\n            var x2 = (((wH[0]-wH[1]))*.5)+wH[1]+50\n            var y2 = ((wH[2]-wH[3])*.5)+wH[3]+50\n            boxA.position.x = x2;\n            boxA.position.y = y2;\n            boxA.positionPrev.x = x2;\n            boxA.positionPrev.y = y2;\n            \n            \n            var boxB = Bodies.rectangle(250,250, 400, 400, { \n                isStatic: true,\n                isSensor: true,\n                render:\n                {\n                    sprite:\n                    {\n                        texture: URL.createObjectURL(image),\n                        xScale:scale,\n                        yScale:scale,\n                    }\n                }\n            });\n            \n                \n            Composite.add(engine.world, [boxA, boxB]);\n        }else{\n            alert(\"You need place at least three dots to test\");\n        }\n        \n        \n        \n        var mouse = Matter.Mouse.create(render.canvas);\n        let mouseConstraint = Matter.MouseConstraint.create(engine, {\n            mouse:mouse,\n            constraint: {\n              render: {\n                visible: false\n              }\n            }\n        });\n        \n        Matter.Events.on(mouseConstraint, 'mousedown', function(event) {\n            const x = event.mouse.position.x\n            const y = event.mouse.position.y\n            var ball = Bodies.circle( x, y, 5);\n            World.add(engine.world, ball);\n        })\n        Composite.add(engine.world, [mouseConstraint]);\n        Render.run(render);\n        var runner = Runner.create();\n    \n        // run the engine\n        Runner.run(runner, engine);\n\n        canvas.style.marginLeft = \"auto\";\n        canvas.style.marginRight = \"auto\";\n        canvas.style.display = \"block\";\n        editorImg.style.display = \"none\";\n    }else if(canvas && editorImg){\n        canvas.style.display = \"none\";\n        editorImg.style.display = \"block\";\n    }\n    \n    return(\n        <>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}